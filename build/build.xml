<?xml version="1.0"?>
<!--
  ~  @package   MailMagic
  ~  @copyright Copyright (c)2020-2021 Nicholas K. Dionysopoulos
  ~  @license   GNU General Public License version 3, or later
  -->

<project name="MailMagic" description="MailMagic" default="git" >
	<import file="${phing.dir}/../../buildfiles/phing/common.xml" />

	<!--
	====================================================================================================
	Build customization
	====================================================================================================
	-->
	<target name="package-pkg" description="Installation package" depends="new-release, setup-properties, package-plugins">

		<!-- Dependencies are enough -->

	</target>

	<!--
	Internal builder task to build one plugin installation package at a time
	-->
	<target name="package-plugin-item" description="Package a single plugin">
		<echo message="Packaging plugin ${plugin_area}/${plugin_name}" />

		<property name="plugin_package" value="${dirs.release}/plg_${plugin_area}_${plugin_name}.zip" />

		<zipme basedir="${plugin_dir}" destfile="${plugin_package}" includeemptydirs="true">
			<fileset dir="${plugin_dir}">
				<include name="**" />
				<exclude name="vendor/soundasleep/html2test/tests/**" />
				<exclude name="vendor/soundasleep/html2test/.editorconfig" />
				<exclude name="vendor/soundasleep/html2test/.gitignore" />
				<exclude name="vendor/soundasleep/html2test/.travis.yml" />
				<exclude name="vendor/soundasleep/html2test/composer.*" />
				<exclude name="vendor/soundasleep/html2test/*.php" />
				<exclude name="vendor/soundasleep/html2test/phpunit.xml" />
			</fileset>
		</zipme>
	</target>


	<!--
	====================================================================================================
	Tasks - Documentation
	====================================================================================================
	-->

	<target name="documentation" description="The documentation">
		<echo message="The documentation can be found in the repository's Wiki on GitHub. This task is obsolete." />
	</target>

	<!--
	====================================================================================================
	Tasks - Project management
	====================================================================================================
	-->

	<target name="release">
		<!-- Make sure there is a tag that's the same as the version number -->
		<gittag gitPath="${git.binary}"
				repository="${dirs.root}"
				list="true" pattern="${version}"
				outputProperty="git.tags"
		/>

		<php function="trim" returnProperty="git.tags">
			<param value="${git.tags}" />
		</php>

		<if>
			<not>
				<equals arg1="${git.tags}" arg2="${version}" />
			</not>
			<then>
				<fail message="You must tag version ${version} before trying to release it." />
			</then>
		</if>

		<!-- Verify the tag. If it can't verify the tag the build fails. -->
		<gittag gitPath="${git.binary}"
				repository="${dirs.root}"
				verify="true"
				object="${version}"
				outputProperty="git.verify"
		/>

		<!-- Make a draft release -->
		<loadfile property="github.release.body" file="${dirs.root}/RELEASENOTES.md" />

		<GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					   tagName="${version}" releaseName="v.${version}" releaseBody="${github.release.body}" draft="1"
					   propName="github.release.id" />

		<!-- Upload the release files -->
		<GitHubAsset token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					 file="${dirs.release}/plg_system_mailmagic.zip"
					 releaseId="${github.release.id}" />

		<!-- Publish the release -->
		<GitHubRelease token="${github.token}" organization="${github.organization}" repository="${github.repository}"
					   tagName="${version}" draft="0" />
	</target>

	<target name="docsdeploy">
		<echo message="The documentation can be found in the repository's Wiki on GitHub. This task is obsolete." />
	</target>
</project>
